@import '@accoutrement';

/* stylelint-disable no-descending-specificity */
@mixin add-colors($map) {
  @each $class, $value in $map {
    &.#{$class} {
      color: contrast-text-color($value, 'high', 'AAA');
      background-color: $value;
      border-color: $value;
      &:not(:disabled) {
        &:hover {
          background-color: shade($value, 40%);
          border-color: shade($value, 40%);
        }

        &:active,
        &:active:hover {
          background-color: shade($value, 60%);
          border-color: shade($value, 60%);
        }
      }
    }
  }
}

.container {
  @include border('button');
  @include border-radius('button');
  @include padding('button');
  @include typography('button');
  @include transition('button');

  position: relative;
  display: inline-block;
  line-height: 1.4;
  text-decoration: none;
  cursor: pointer;
  appearance: none;

  &::-moz-focus-inner {
    border: 0;
  }

  &:focus {
    outline: outline('none');
  }

  &:focus-visible {
    outline: border('keyboard-focus');
  }

  &:disabled {
    cursor: not-allowed;
  }

  &.primary {
    color: contrast-text-color('primary-dark-1');
    background-color: color('primary');
    border-color: color('primary');

    &:disabled {
      color: contrast-text-color('button.disabled', 'disabled');
      background-color: color('button.disabled');
      border-color: color('button.disabled');
    }

    &:not(:disabled) {
      &:hover {
        background-color: color('primary-dark-2');
        border-color: color('primary-dark-2');
      }

      &:active,
      &:active:hover {
        background-color: color('primary-dark-3');
        border-color: color('primary-dark-3');
      }
    }
  }

  &.secondary {
    color: text-color('primary');
    background-color: color('white');
    border-color: color('primary');

    &:disabled {
      color: contrast-text-color('gray-light-3', 'disabled');
      background-color: color('gray-light-3');
      border-color: color('button.disabled');
    }

    &:not(:disabled) {
      &:hover {
        background-color: color('primary-light-3');
      }

      &:active,
      &:active:hover {
        background-color: color('primary-light-2');
      }
    }
  }

  &.text {
    padding: 0;
    color: text-color('primary');
    background-color: transparent;
    border-color: transparent;

    &:disabled {
      color: text-color('primary', 'disabled');
    }

    &:not(:disabled) {
      &:hover {
        color: text-color('primary', 'medium');
      }

      &:active,
      &:active:hover {
        color: text-color('primary');
      }
    }
  }

  &.tertiary {
    color: text-color('primary');
    background-color: color('white');
    border-color: color('white');

    &:disabled {
      color: contrast-text-color('gray-light-3', 'disabled');
      background-color: color('gray-light-3');
      border-color: color('white');
    }

    &:not(:disabled) {
      &:hover {
        color: color('primary-dark-1');
      }

      &:active,
      &:active:hover {
        color: color('primary-dark-2');
      }
    }
  }

  &.warning {
    color: contrast-text-color('danger');
    background-color: color('danger');
    border-color: color('danger');

    &:disabled {
      color: contrast-text-color('button.disabled', 'disabled');
      background-color: color('button.disabled');
      border-color: color('button.disabled');
    }

    &:not(:disabled) {
      &:hover {
        background-color: color('danger-dark-1');
      }

      &:active,
      &:active:hover {
        background-color: color('danger-dark-2');
      }
    }
  }

  &.inherit {
    color: var(--current-color, currentColor);

    @include transition('all');

    &:disabled {
      color: var(--current-color, currentColor);
    }

    &:not(:disabled) {
      &:hover {
        color: var(--current-color, currentColor);
      }

      &:active,
      &:active:hover {
        color: var(--current-color, currentColor);
        transform: translateY(2px);
      }
    }
  }

  &.icon {
    @include padding('icon-button');

    box-sizing: content-box;
    width: 1em;
    height: 1em;
    svg {
      transform: #{scale }(1.25);
      transform-origin: center center;
    }
  }

  &.notification-button {
    z-index: z-index('notification');
    width: 2em;
    height: 2em;
    background-color: #4f46c8;
    border-color: #4f46c8;
    box-shadow: shadow('raised');

    &:not(:disabled) {
      &:hover {
        background-color: #2f2a78;
        border-color: #2f2a78;
      }

      &:active,
      &:active:hover {
        background-color: #201c50;
        border-color: #201c50;
      }
    }

    .notification-icon {
      z-index: z-index('notification');
      svg {
        width: 1.4em;
        height: 1.4em;
        margin-left: negative(size('3x'));
      }
      .count {
        position: absolute;
        top: negative(size('2x'));
        min-width: size('4x');
        height: size('4x');
        font-size: 10px;
        color: #4f46c8;
        background: color('white');
        border: 1px solid color('white');
        border-radius: size('3x');
      }
    }
  }

  > .icon {
    // TODO: Remove this hack for aligning icon with text.
    display: inline-block;
    transform: translateY(1px);

    &.leading {
      padding-inline-end: 1ch;
    }

    &.trailing {
      padding-inline-start: 1ch;
    }

    &.loading {
      position: absolute;
      top: 50%;
      left: 50%;
      margin-top: -0.5em;
      margin-left: -0.5em;
    }
  }

  &.loading {
    position: relative;

    > *:not(.loading) {
      color: transparent; // Hide Text and icons.
    }
  }

  .loading {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: size('6x');
    transform: translate(-50%, -50%);
  }

  &.small {
    padding: size('1x') size('4x');
  }

  &.large {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: size('24x');
    font-size: font-size('body');
    border-radius: size('1x');
    box-shadow: shadow('raised');

    .caption {
      margin-top: size('1x');
      font-style: italic;
      color: inherit;
      text-transform: none;
    }
    svg {
      width: size('7x');
      height: size('7x');
      margin-bottom: size('2x');
    }
  }

  @include add-colors(
    (
      'blue': color('primary'),
      'red': color('danger'),
      'yellow': color('warning'),
      'green': color('success'),
      'gray': color('gray-dark'),
      'black': color('black'),
      'pink': color('pink'),
    )
  );

  .icon-button {
    position: absolute;
    top: 50%;
    left: 50%;
    display: flex;
    transform: translate(-50%, -50%);
  }

  + .container {
    margin-left: size('4x');
  }
}
