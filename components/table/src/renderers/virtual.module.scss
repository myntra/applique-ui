/* stylelint-disable no-descending-specificity */
@import '@accoutrement';

.virtual {
  width: 100%;
  max-width: 100vw;
  height: 100%;
  max-height: 100vh;

  /* TODO: Move to global reset. */
  * {
    box-sizing: border-box;
  }

  .container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .table {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 0;
    flex: 1;
    overflow: auto;

    .h-col {
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      width: 100%;
      height: 100%;
    }

    .h-col-head {
      display: flex;
      flex: 0 0 30px;
      padding: 0 8px;

      &.center {
        justify-content: center;
        text-align: center;
      }
    }

    .h-col-head-text {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .h-col-children {
      display: flex;
      flex-direction: row;
      width: 100%;
      height: 100%;

      .h-col:last-child {
        border-right: none;
      }
    }

    .thead {
      @include border-bottom('table.tr');

      z-index: -1;
      display: flex;

      // This keeps fixed columns stuck to edges when scrolling.
      clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
      border-color: color('table.border');
    }

    .tbody {
      z-index: -2;
    }

    .th {
      @include typography('th');

      position: absolute;
      height: 100%;
      font-weight: bold; /* TODO: Use table typography. */
      line-height: 1.15;
      text-transform: capitalize;
      background-color: color('table.head');

      &:hover {
        background-color: color('table.hover');
      }

      &:active {
        background-color: color('table.active');
      }
    }

    .td {
      @include padding('table.td');
      @include typography('body');

      position: absolute;
      line-height: 1.15;
    }

    .tr {
      @include border-bottom('table.tr');

      position: absolute;
      right: 0;
      left: 0;
      overflow: hidden;
      border-color: color('table.border');

      .td {
        background-color: color('table.body');
      }

      &:hover {
        .td {
          background-color: color('table.hover');
        }
      }

      .selected {
        background-color: color('table.active');
      }
    }

    .fixed {
      position: absolute;
      top: 0;
      bottom: 0;
      z-index: 1;
      display: flex;

      &.show:not(.end) {
        @include border-right('table.tr');
        @include shadow('small.right');

        border-color: color('table.border');
      }

      &.end {
        margin-left: calc(0 - var(--scroll-bar-width, 0));
        transform: translateX(-100%);

        &.show {
          @include border-left('table.tr');
          @include shadow('small.left');

          border-color: color('table.border');
        }
      }

      > .td,
      > .th {
        position: initial;
        display: inline-flex;
      }
    }
  }

  &.window .table {
    overflow-x: auto;
    overflow-y: hidden;
  }
}
